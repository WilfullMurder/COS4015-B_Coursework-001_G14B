Problem 1 is a rewrite of the classic chicken & fox problem:
"A student finds herself in a riverbank with three pets: a dog, a cat, and a hamster. She 
needs to transport all three to the other side of the river in her boat. However, the boat has room 
for only the student herself and one pet (either the dog, the cat, or the hamster). In her absence, 
the  dog  would  attack  the  cat,  and  the  cat  would  attack  the  hamster.  Devise  an  algorithm  that 
shows how the student can get all these passengers to the other side."

The rules of a riddle generate a simple solution:

Student takes cat
Student returns alone

if Student takes hamster:
  Student leaves hamster
  Student returns with cat
  Student leaves cat and takes dog
 else:
  student leaves dog
  Student returns with cat
  Student leaves cat and takes hamster
  
Student returns alone
Student takes cat
Everyone is on the other side without any incidents

visual representation of obstacle

|                |                |                |
|                |                |                |
|                |                |                |
|                |                |                |
|    ORIGIN      |     RIVER      |  DESTINATION   |
|                |                |                |
|                |                |                |
|                |                |                |
|                |                |                |
|                |                |                |
       0                 1                2
       
where each object is carried in a STATE containing their location:
[student:int, hamster:int, cat:int, dog:int]

where [0,0,0,0] is the START STATE:
|                |                |                |
|                |                |                |
|                |                |                |
|                |                |                |
|    STUDENT     |     RIVER      |  DESTINATION   |
|    HAMSTER     |                |                |
|      CAT       |                |                |
|      DOG       |                |                |
|                |                |                |
|                |                |                |
       0                 1                2


and [2,2,2,2] is the END STATE:
|                |                |                |
|                |                |                |
|                |                |                |
|                |                |                |
|    ORIGIN      |     RIVER      |     STUDENT    |
|                |                |    HAMESTER    |
|                |                |       CAT      |
|                |                |       DOG      |
|                |                |                |
|                |                |                |
       0                 1                2
       
       
RANDOM STATE:
only 2 objects can be at 1 (on the river) i.e. [1,0,1,0], [1,0,1,2] are valid states
only the student can move objects therefore e.g. [0,1,1,0] is an invalid state


so we can graph each state to a node with a 4 digit value and add negative weight to the edges of invalid states and
then use bellman-ford to determine the shortest path.
